<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="club.lightingsummer.movie.order.dal.dao.OrderMapper">
    <resultMap id="BaseResultMap" type="club.lightingsummer.movie.order.api.po.Order">
        <id column="UUID" jdbcType="VARCHAR" property="uuid"/>
        <result column="cinema_id" jdbcType="INTEGER" property="cinemaId"/>
        <result column="field_id" jdbcType="INTEGER" property="fieldId"/>
        <result column="film_id" jdbcType="INTEGER" property="filmId"/>
        <result column="seats_ids" jdbcType="VARCHAR" property="seatsIds"/>
        <result column="seats_name" jdbcType="VARCHAR" property="seatsName"/>
        <result column="film_price" jdbcType="DOUBLE" property="filmPrice"/>
        <result column="order_price" jdbcType="DOUBLE" property="orderPrice"/>
        <result column="order_time" jdbcType="TIMESTAMP" property="orderTime"/>
        <result column="order_user" jdbcType="INTEGER" property="orderUser"/>
        <result column="order_status" jdbcType="INTEGER" property="orderStatus"/>
    </resultMap>
    <sql id="Base_Column_List">
    UUID, cinema_id, field_id, film_id, seats_ids, seats_name, film_price, order_price, 
    order_time, order_user, order_status
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_order
        where UUID = #{uuid,jdbcType=VARCHAR}
    </select>
    <select id="selectOrderByFieldId" resultType="club.lightingsummer.movie.order.api.po.Order">
        select
        <include refid="Base_Column_List"/>
        from tb_order
        where field_id = #{fieldId}
    </select>
    <select id="selectOrderByUserId" resultType="club.lightingsummer.movie.order.api.vo.OrderVO">
      SELECT
	    o.UUID AS orderId,
	    h.film_name AS filmName,
	    CONCAT(DATE_FORMAT(o.`order_time`,'%y年%m月%d日'),' ',f.`begin_time`) AS fieldTime,
	    c.cinema_name AS cinemaName,
	    o.order_price AS orderPrice,
	    o.order_status AS orderStatus,
	    o.seats_name AS seatsName,
	    UNIX_TIMESTAMP(o.`order_time`) AS orderTimestamp
      FROM
	    tb_order o,
	    tb_field f,
	    tb_cinema c,
	    tb_hall_film_info h
      WHERE
	    o.order_user = #{userId}
	  AND o.field_id = f.UUID
	  AND o.cinema_id = c.UUID
	  AND o.film_id = h.film_id
    </select>
    <select id="selectOrderByOrderId" resultType="club.lightingsummer.movie.order.api.vo.OrderVO">
        SELECT
	    o.UUID AS orderId,
	    h.film_name AS filmName,
	    CONCAT(DATE_FORMAT(o.`order_time`,'%y年%m月%d日'),' ',f.`begin_time`) AS fieldTime,
	    c.cinema_name AS cinemaName,
	    o.order_price AS orderPrice,
	    o.order_status AS orderStatus,
	    o.seats_name AS seatsName,
	    UNIX_TIMESTAMP(o.`order_time`) AS orderTimestamp
      FROM
	    tb_order o,
	    tb_field f,
	    tb_cinema c,
	    tb_hall_film_info h
      WHERE
	    o.order_user = #{orderId}
	  AND o.field_id = f.UUID
	  AND o.cinema_id = c.UUID
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_order
    where UUID = #{uuid,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="club.lightingsummer.movie.order.api.po.Order">
    insert into tb_order (UUID, cinema_id, field_id, 
      film_id, seats_ids, seats_name, 
      film_price, order_price, order_time, 
      order_user, order_status)
    values (#{uuid,jdbcType=VARCHAR}, #{cinemaId,jdbcType=INTEGER}, #{fieldId,jdbcType=INTEGER}, 
      #{filmId,jdbcType=INTEGER}, #{seatsIds,jdbcType=VARCHAR}, #{seatsName,jdbcType=VARCHAR}, 
      #{filmPrice,jdbcType=DOUBLE}, #{orderPrice,jdbcType=DOUBLE}, #{orderTime,jdbcType=TIMESTAMP}, 
      #{orderUser,jdbcType=INTEGER}, #{orderStatus,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="club.lightingsummer.movie.order.api.po.Order">
        insert into tb_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uuid != null">
                UUID,
            </if>
            <if test="cinemaId != null">
                cinema_id,
            </if>
            <if test="fieldId != null">
                field_id,
            </if>
            <if test="filmId != null">
                film_id,
            </if>
            <if test="seatsIds != null">
                seats_ids,
            </if>
            <if test="seatsName != null">
                seats_name,
            </if>
            <if test="filmPrice != null">
                film_price,
            </if>
            <if test="orderPrice != null">
                order_price,
            </if>
            <if test="orderTime != null">
                order_time,
            </if>
            <if test="orderUser != null">
                order_user,
            </if>
            <if test="orderStatus != null">
                order_status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uuid != null">
                #{uuid,jdbcType=VARCHAR},
            </if>
            <if test="cinemaId != null">
                #{cinemaId,jdbcType=INTEGER},
            </if>
            <if test="fieldId != null">
                #{fieldId,jdbcType=INTEGER},
            </if>
            <if test="filmId != null">
                #{filmId,jdbcType=INTEGER},
            </if>
            <if test="seatsIds != null">
                #{seatsIds,jdbcType=VARCHAR},
            </if>
            <if test="seatsName != null">
                #{seatsName,jdbcType=VARCHAR},
            </if>
            <if test="filmPrice != null">
                #{filmPrice,jdbcType=DOUBLE},
            </if>
            <if test="orderPrice != null">
                #{orderPrice,jdbcType=DOUBLE},
            </if>
            <if test="orderTime != null">
                #{orderTime,jdbcType=TIMESTAMP},
            </if>
            <if test="orderUser != null">
                #{orderUser,jdbcType=INTEGER},
            </if>
            <if test="orderStatus != null">
                #{orderStatus,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="club.lightingsummer.movie.order.api.po.Order">
        update tb_order
        <set>
            <if test="cinemaId != null">
                cinema_id = #{cinemaId,jdbcType=INTEGER},
            </if>
            <if test="fieldId != null">
                field_id = #{fieldId,jdbcType=INTEGER},
            </if>
            <if test="filmId != null">
                film_id = #{filmId,jdbcType=INTEGER},
            </if>
            <if test="seatsIds != null">
                seats_ids = #{seatsIds,jdbcType=VARCHAR},
            </if>
            <if test="seatsName != null">
                seats_name = #{seatsName,jdbcType=VARCHAR},
            </if>
            <if test="filmPrice != null">
                film_price = #{filmPrice,jdbcType=DOUBLE},
            </if>
            <if test="orderPrice != null">
                order_price = #{orderPrice,jdbcType=DOUBLE},
            </if>
            <if test="orderTime != null">
                order_time = #{orderTime,jdbcType=TIMESTAMP},
            </if>
            <if test="orderUser != null">
                order_user = #{orderUser,jdbcType=INTEGER},
            </if>
            <if test="orderStatus != null">
                order_status = #{orderStatus,jdbcType=INTEGER},
            </if>
        </set>
        where UUID = #{uuid,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="club.lightingsummer.movie.order.api.po.Order">
    update tb_order
    set cinema_id = #{cinemaId,jdbcType=INTEGER},
      field_id = #{fieldId,jdbcType=INTEGER},
      film_id = #{filmId,jdbcType=INTEGER},
      seats_ids = #{seatsIds,jdbcType=VARCHAR},
      seats_name = #{seatsName,jdbcType=VARCHAR},
      film_price = #{filmPrice,jdbcType=DOUBLE},
      order_price = #{orderPrice,jdbcType=DOUBLE},
      order_time = #{orderTime,jdbcType=TIMESTAMP},
      order_user = #{orderUser,jdbcType=INTEGER},
      order_status = #{orderStatus,jdbcType=INTEGER}
    where UUID = #{uuid,jdbcType=VARCHAR}
  </update>
</mapper>